FROM ubuntu:22.04 as sgx_hw

RUN apt update && apt install -y build-essential ocaml automake autoconf libtool wget python3 libssl-dev dkms
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1

RUN echo 'deb [signed-by=/etc/apt/keyrings/intel-sgx-keyring.asc arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu jammy main' | tee /etc/apt/sources.list.d/intel-sgx.list
RUN wget https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key -O- | tee /etc/apt/keyrings/intel-sgx-keyring.asc > /dev/null
RUN apt update && apt install -y libsgx-epid libsgx-quote-ex libsgx-dcap-ql

WORKDIR /opt/intel
RUN wget https://download.01.org/intel-sgx/latest/linux-latest/distro/ubuntu22.04-server/sgx_linux_x64_sdk_2.22.100.3.bin
RUN chmod +x sgx_linux_x64_sdk_2.22.100.3.bin
RUN ./sgx_linux_x64_sdk_2.22.100.3.bin --prefix /opt/intel
ENV SGX_SDK=/opt/intel/sgxsdk

RUN apt update && apt install -y pkg-config git meson uuid-dev libmbedtls-dev nlohmann-json3-dev nano fio xxd libc-bin screen

WORKDIR /tmp
RUN git clone https://github.com/libfuse/libfuse.git
RUN mkdir /tmp/libfuse/build
WORKDIR /tmp/libfuse/build
RUN meson setup .. && ninja && ninja install

WORKDIR /app
COPY . .
RUN make -j4 BUILD_DIR=/build SGX_DEBUG=0 SGX_MODE=HW SGX_SWITCHLESS=1 Enclave_CFLAGS="-DENABLE_DEBUG_PRINT=0 -DMAX_CACHE_NUM=4096 -DCHUNKSIZE=4096"
ENV PATH $PATH:/build/bin
WORKDIR /root
COPY sample/* .
RUN mkdir vol mnt
